components:
  schemas:
    AuthParticipantInfoUpdateDTO:
      properties:
        email:
          type: string
        first_name:
          type: string
        gender:
          type: string
        github_address:
          type: string
        last_name:
          type: string
        linkedIn_address:
          type: string
        state:
          type: string
      type: object
    AuthUserInfoFetchFailureResponse:
      properties:
        code:
          type: integer
        message:
          type: string
      type: object
    AuthUserInfoFetchSuccessResponse:
      properties:
        code:
          type: integer
        data:
          $ref: '#/components/schemas/AuthUserInfoFetchSuccessResponseData'
          type: object
        message:
          type: string
      type: object
    AuthUserInfoFetchSuccessResponseData:
      properties:
        age:
          type: integer
        co_participant_emails:
          items:
            type: string
          type: array
        dob:
          format: date-time
          type: string
        email:
          type: string
        first_name:
          type: string
        gender:
          type: string
        hackathon_id:
          type: string
        invite_list:
          items:
            properties:
              Email:
                type: string
              InviterId:
                type: string
              Time:
                format: date-time
                type: string
            type: object
          type: array
        last_name:
          type: string
        participant_email:
          type: string
        participant_id:
          type: string
        passwordHash:
          type: string
        phone_number:
          type: string
        role:
          type: string
        skillset:
          items:
            type: string
          type: array
        state:
          type: string
        status:
          type: string
        team_lead_email:
          type: string
        team_name:
          type: string
        team_role:
          type: string
        type:
          type: string
      type: object
    AuthUserInfoUpdateDTO:
      properties:
        email:
          type: string
        first_name:
          type: string
        gender:
          type: string
        last_name:
          type: string
        state:
          type: string
      type: object
    BasicLoginDTO:
      properties:
        identifier:
          type: string
        password:
          type: string
      type: object
    BasicLoginFailureResponse:
      properties:
        code:
          type: integer
        message:
          type: string
      type: object
    BasicLoginSuccessResponse:
      properties:
        code:
          type: integer
        data:
          $ref: '#/components/schemas/BasicLoginSuccessResponseData'
          type: object
        message:
          type: string
      type: object
    BasicLoginSuccessResponseData:
      properties:
        access_token:
          type: string
      type: object
    ChangePasswordDTO:
      properties:
        new_password:
          type: string
        old_password:
          type: string
      type: object
    CompleteEmailVerificationDTO:
      properties:
        email:
          type: string
        token:
          type: string
      type: object
    CompleteEmailVerificationFailureResponse:
      properties:
        code:
          type: integer
        message:
          type: string
      type: object
    CompleteEmailVerificationSuccessResponse:
      properties:
        code:
          type: integer
        data:
          $ref: '#/components/schemas/CompleteEmailVerificationSuccessResponseData'
          type: object
        message:
          type: string
      type: object
    CompleteEmailVerificationSuccessResponseData:
      properties:
        email:
          type: string
      type: object
    CompletePasswordRecoveryDTO:
      properties:
        email:
          type: string
        new_password:
          type: string
        token:
          type: string
      type: object
    CompletePasswordRecoveryFailureResponse:
      properties:
        code:
          type: integer
        message:
          type: string
      type: object
    CompletePasswordRecoverySuccessResponse:
      properties:
        code:
          type: integer
        data:
          $ref: '#/components/schemas/CompleteEmailVerificationSuccessResponseData'
          type: object
        message:
          type: string
      type: object
    CreateAccountData:
      properties:
        DOB:
          format: date-time
          type: string
        Email:
          type: string
        FirstName:
          type: string
        Gender:
          type: string
        LastName:
          type: string
        PasswordHash:
          type: string
        PhoneNumber:
          type: string
        Role:
          type: string
        Skillset:
          items:
            type: string
          type: array
        State:
          type: string
      type: object
    CreateJudgeAccountData:
      properties:
        DOB:
          format: date-time
          type: string
        Email:
          type: string
        FirstName:
          type: string
        Gender:
          type: string
        LastName:
          type: string
        PasswordHash:
          type: string
        PhoneNumber:
          type: string
        Role:
          type: string
        Skillset:
          items:
            type: string
          type: array
        State:
          type: string
      type: object
    InitiateEmailVerificationFailureResponse:
      properties:
        code:
          type: integer
        message:
          type: string
      type: object
    InitiateEmailVerificationSuccessResponse:
      properties:
        code:
          type: integer
        data:
          $ref: '#/components/schemas/InitiateEmailVerificationSuccessResponseData'
          type: object
        message:
          type: string
      type: object
    InitiateEmailVerificationSuccessResponseData:
      properties:
        email:
          type: string
      type: object
    InviteInfo:
      properties:
        Email:
          type: string
        InviterId:
          type: string
        Time:
          format: date-time
          type: string
      type: object
    InviteTeamMemberFailResponse:
      properties:
        code:
          type: integer
        message:
          type: string
      type: object
    InviteTeamMemberSuccessResponse:
      properties:
        code:
          type: integer
        message:
          type: string
      type: object
    InviteToTeamData:
      properties:
        email:
          type: string
        participant_id:
          type: string
        role:
          type: string
      type: object
    Participant:
      properties:
        age:
          type: integer
        co_participant_emails:
          items:
            type: string
          type: array
        dob:
          format: date-time
          type: string
        email:
          type: string
        first_name:
          type: string
        gender:
          type: string
        hackathon_id:
          type: string
        invite_list:
          items:
            properties:
              Email:
                type: string
              InviterId:
                type: string
              Time:
                format: date-time
                type: string
            type: object
          type: array
        last_name:
          type: string
        participant_email:
          type: string
        participant_id:
          type: string
        passwordHash:
          type: string
        phone_number:
          type: string
        role:
          type: string
        skillset:
          items:
            type: string
          type: array
        state:
          type: string
        status:
          type: string
        team_lead_email:
          type: string
        team_name:
          type: string
        team_role:
          type: string
        type:
          type: string
      type: object
    PasswordChangeFailureResponse:
      properties:
        code:
          type: integer
        message:
          type: string
      type: object
    PasswordChangeSuccessResponse:
      properties:
        code:
          type: integer
        data:
          $ref: '#/components/schemas/PasswordChangeSuccessResponseData'
          type: object
        message:
          type: string
      type: object
    PasswordChangeSuccessResponseData:
      properties:
        email:
          type: string
        first_name:
          type: string
        gender:
          type: string
        last_name:
          type: string
        participant_id:
          type: string
      type: object
    RegisterJudgeFailResponse:
      properties:
        code:
          type: integer
        message:
          type: string
      type: object
    RegisterJudgeSuccessResponse:
      properties:
        Data:
          $ref: '#/components/schemas/CreateJudgeAccountData'
          type: object
        code:
          type: integer
        message:
          type: string
      type: object
    RegisterNewParticipantDTO:
      properties:
        confirm_password:
          type: string
        dob:
          type: string
        email:
          type: string
        first_name:
          type: string
        gender:
          type: string
        last_name:
          type: string
        password:
          type: string
        phone_number:
          type: string
        skillset:
          items:
            type: string
          type: array
        state:
          type: string
        team_name:
          type: string
        team_size:
          type: integer
        type:
          type: string
      type: object
    RegisterParticipantFailResponse:
      properties:
        code:
          type: integer
        message:
          type: string
      type: object
    RegisterParticipantSuccessResponse:
      properties:
        Data:
          $ref: '#/components/schemas/Participant'
          type: object
        code:
          type: integer
        message:
          type: string
      type: object
    ResponseData:
      properties:
        code:
          type: integer
        message:
          type: string
      type: object
    entity.Participant:
      properties:
        age:
          type: integer
        co_participant_emails:
          items:
            type: string
          type: array
        dob:
          format: date-time
          type: string
        email:
          type: string
        first_name:
          type: string
        gender:
          type: string
        hackathon_id:
          type: string
        invite_list:
          items:
            properties:
              Email:
                type: string
              InviterId:
                type: string
              Time:
                format: date-time
                type: string
            type: object
          type: array
        last_name:
          type: string
        participant_email:
          type: string
        participant_id:
          type: string
        passwordHash:
          type: string
        phone_number:
          type: string
        role:
          type: string
        skillset:
          items:
            type: string
          type: array
        state:
          type: string
        status:
          type: string
        team_lead_email:
          type: string
        team_name:
          type: string
        team_role:
          type: string
        type:
          type: string
      type: object
info:
  contact:
    email: appdev@arravo.co
    name: David Alabi
  description: API usually works as expected. But sometimes its not true.
  license:
    name: MIT
    url: https://en.wikipedia.org/wiki/MIT_License
  termsOfService: http://arravo.co/contact
  title: Hackathon Backend API
  version: 1.0.0
openapi: 3.0.0
paths:
  /api/auth/login:
    post:
      description: ' Log a user in'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BasicLoginDTO'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicLoginSuccessResponse'
          description: Users Responses JSON
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicLoginFailureResponse'
          description: Login failed
  /api/auth/me:
    get:
      description: ' Get auth user information "Type ''Bearer TOKEN'' to correctly
        set the Bearer token"'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthUserInfoFetchSuccessResponse'
          description: UserInfo fetched successfully
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthUserInfoFetchFailureResponse'
          description: UserInfo fetch failed
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthUserInfoFetchFailureResponse'
          description: UserInfo fetch failed
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthUserInfoFetchFailureResponse'
          description: UserInfo fetch failed
    put:
      description: ' Get auth user information'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthParticipantInfoUpdateDTO'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthUserInfoFetchSuccessResponse'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthUserInfoFetchFailureResponse'
          description: ""
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthUserInfoFetchFailureResponse'
          description: ""
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthUserInfoFetchFailureResponse'
          description: ""
  /api/auth/password/change:
    post:
      description: ' Change User Password'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChangePasswordDTO'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PasswordChangeSuccessResponse'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PasswordChangeFailureResponse'
          description: ""
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PasswordChangeFailureResponse'
          description: ""
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PasswordChangeFailureResponse'
          description: ""
  /api/auth/password/recovery/completion:
    post:
      description: ' Complete password recovery'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompletePasswordRecoveryDTO'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompletePasswordRecoverySuccessResponse'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompletePasswordRecoveryFailureResponse'
          description: ""
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompletePasswordRecoveryFailureResponse'
          description: ""
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompletePasswordRecoveryFailureResponse'
          description: ""
  /api/auth/password/recovery/initiation:
    get:
      description: ' Initiate Password Recovery'
      parameters:
      - description: Email to verify
        in: query
        name: email
        schema:
          description: Email to verify
          format: string
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InitiateEmailVerificationSuccessResponse'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InitiateEmailVerificationFailureResponse'
          description: ""
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InitiateEmailVerificationFailureResponse'
          description: ""
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InitiateEmailVerificationFailureResponse'
          description: ""
  /api/auth/team/invite:
    get:
      description: ' Validate team invite link'
      responses:
        "200":
          content:
            text/plain:
              schema:
                type: string
          description: ""
        "400":
          content:
            text/plain:
              schema:
                type: string
          description: ""
        "404":
          content:
            text/plain:
              schema:
                type: string
          description: ""
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: ""
  /api/auth/verification/email/completion:
    post:
      description: ' Verify user email address'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompleteEmailVerificationDTO'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompleteEmailVerificationSuccessResponse'
          description: Email verification successful
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompleteEmailVerificationFailureResponse'
          description: Email verification failed
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompleteEmailVerificationFailureResponse'
          description: Email verification failed
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompleteEmailVerificationFailureResponse'
          description: Email verification failed
  /api/auth/verification/email/initiation:
    get:
      description: ' Generate token to verify user email address'
      parameters:
      - description: Email to verify
        in: query
        name: email
        schema:
          description: Email to verify
          format: string
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InitiateEmailVerificationSuccessResponse'
          description: Verification succeeded
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InitiateEmailVerificationFailureResponse'
          description: Verification failed
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InitiateEmailVerificationFailureResponse'
          description: Verification failed
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InitiateEmailVerificationFailureResponse'
          description: Verification failed
  /api/judges:
    post:
      description: ' Register new judge'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegisterJudgeSuccessResponse'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegisterJudgeFailResponse'
          description: ""
  /api/participants:
    post:
      description: ' Register new participant'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterNewParticipantDTO'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegisterParticipantSuccessResponse'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegisterParticipantFailResponse'
          description: ""
  /api/participants/:
    post:
      description: ' Invite new member'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InviteToTeamData'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InviteTeamMemberSuccessResponse'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InviteTeamMemberFailResponse'
          description: ""
servers:
- description: ' Localhost'
  url: localhost:5000
- description: ' Development'
  url: https://hackathon-backend-2cvk.onrender.com
