// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/auth/login": {
            "post": {
                "description": "Log a user in",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Log a user in",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/routes.BasicLoginSuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/routes.BasicLoginFailureResponse"
                        }
                    }
                }
            }
        },
        "/api/participants": {
            "post": {
                "description": "Register new participant",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Participants"
                ],
                "summary": "Register new participant",
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/routes.RegisterParticipantSuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/routes.RegisterParticipantFailResponse"
                        }
                    }
                }
            }
        },
        "/participants": {
            "put": {
                "description": "Update participant's information",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Participants"
                ],
                "summary": "Update participant's information",
                "responses": {}
            }
        }
    },
    "definitions": {
        "data.CreateParticipantAccountData": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "firstName": {
                    "type": "string"
                },
                "gender": {
                    "type": "string"
                },
                "githubAddress": {
                    "type": "string"
                },
                "lastName": {
                    "type": "string"
                },
                "linkedInAddress": {
                    "type": "string"
                },
                "passwordHash": {
                    "type": "string"
                },
                "state": {
                    "type": "string"
                }
            }
        },
        "routes.BasicLoginFailureResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "routes.BasicLoginSuccessResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {
                    "$ref": "#/definitions/routes.BasicLoginSuccessResponseData"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "routes.BasicLoginSuccessResponseData": {
            "type": "object",
            "properties": {
                "access_token": {
                    "type": "string"
                }
            }
        },
        "routes.RegisterParticipantFailResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "routes.RegisterParticipantSuccessResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {
                    "$ref": "#/definitions/data.CreateParticipantAccountData"
                },
                "message": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
